# STP

STP is a constraint solver (or SMT solver) aimed at solving constraints of bitvectors and arrays. These types of constraints can be generated by program analysis  tools, theorem provers, automated bug finders, cryptographic attack tools, intelligent fuzzers, model checkers, and by many other applications.

Homepage:      http://stp.github.io/stp/

Ubuntu PPA:    https://launchpad.net/~simple-theorem-prover/+archive/ubuntu/ppa/+packages

Documentation: https://github.com/stp/stp/wiki

[![Build Status](https://travis-ci.org/stp/stp.svg?branch=master)](https://travis-ci.org/stp/stp)

## Quick build&install:

Get all prerequisites:
```
$ sudo apt-get install cmake gcc g++ libboost-all-dev bison flex python perl
```

Get minisat:
```
$ git clone https://github.com/stp/minisat.git
$ cd minisat
$ mkdir build && cd build
$ cmake ..
$ make
$ sudo make install
```

Optionally, you can build and CryptoMiniSat4 and it will be autodetected during build. Get it from  https://github.com/msoos/cryptominisat

Get stp:
```
$ git clone https://github.com/stp/stp.git
$ cd stp
$ mkdir build && cd build
$ cmake ..
$ make
$ sudo make install
```

## Input format

The file based input formats that STP reads are the: CVC, SMT-LIB1, and SMT-LIB2 formats. The SMT-LIB2 format is the recommended file format, because it is parsed by all modern bitvector solvers. Only quantifier-free bitvectors and arrays are implemented from the SMTLibv2 format.

### Usage
```
stp myproblem.smt
```

## Authors

* Vijay Ganesh
* Trevor Hansen

